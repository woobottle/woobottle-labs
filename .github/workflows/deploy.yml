name: Deploy Static Website to S3

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2 # 본인의 S3 버킷 리전으로 변경
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 'latest'

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build and deploy
      run: |
        pnpm build # (선택사항, React/Vue/Angular 프로젝트의 경우)
    
    - name: Sync files to S3 bucket
      run:  |
        # HTML 파일들을 먼저 업로드 (짧은 캐시)
        aws s3 sync ./out s3://woo-bottle.com/ \
            --delete \
            --cache-control "public, max-age=300" \
            --include "*.html" \
            --exclude "*"
        
        # 정적 자산들 업로드 (긴 캐시)
        aws s3 sync ./out s3://woo-bottle.com/ \
            --cache-control "public, max-age=31536000" \
            --include "*.js" \
            --include "*.css" \
            --include "*.woff*" \
            --include "*.svg" \
            --include "*.ico" \
            --exclude "*"
        
        # JSON 파일들 업로드 (중간 캐시)
        aws s3 sync ./out s3://woo-bottle.com/ \
            --cache-control "public, max-age=3600" \
            --include "*.json" \
            --exclude "*"
    
    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"