name: Rollback Full Website Deployment

on:
  workflow_dispatch:
    inputs:
      version_id:
        description: 'Rollback할 배포의 Version ID (해당 배포의 모든 파일이 이 Version ID를 가짐)'
        required: true

jobs:
  rollback:
    runs-on: ubuntu-latest
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2 # 본인 S3 버킷 리전으로 변경

    - name: Rollback all files to previous version
      run: |
        BUCKET="woo-bottle.com"
        VERSION_ID="${{ github.event.inputs.version_id }}"
        
        echo "롤백을 시작합니다. 버전 ID: ${VERSION_ID}"
        
        # 특정 버전 ID에 해당하는 모든 객체를 찾습니다.
        echo "해당 버전 ID의 파일들을 찾는 중..."
        aws s3api list-object-versions --bucket $BUCKET --query "Versions[?VersionId=='$VERSION_ID'].[Key]" --output text | while read -r key; do
          if [ -n "$key" ] && [ "$key" != "None" ]; then
            echo "처리 중인 파일: $key"
            
            # 해당 파일의 모든 버전을 시간순으로 정렬하여 가져옵니다 (최신순)
            PREVIOUS_VERSION_ID=$(aws s3api list-object-versions --bucket $BUCKET --prefix "$key" --query "Versions[?Key=='$key'] | sort_by(@, &LastModified) | reverse(@) | [1].VersionId" --output text)
            
            if [ -n "$PREVIOUS_VERSION_ID" ] && [ "$PREVIOUS_VERSION_ID" != "None" ]; then
              echo "파일: $key, 이전 버전 ID로 롤백: $PREVIOUS_VERSION_ID"
              # 이전 버전의 객체를 현재 버전으로 복사합니다.
              aws s3 cp "s3://$BUCKET/$key" "s3://$BUCKET/$key" --source-version-id "$PREVIOUS_VERSION_ID"
            else
              echo "파일: $key는 이전 버전이 없습니다. 건너뜁니다."
            fi
          fi
        done
        
        echo "롤백이 완료되었습니다."